// /*======== FORMS VARIABLES & MIXINS & EXTENDS =========*/
$p-top: 10;
$p-side: 20;
$p-koef: 2;

%form_el_base{
  @include rem('padding', $p-top, $p-side, $p-top - $p-koef);
  @include font-size($font-size-btnBase, 1);
  @include rem('border-radius', ( $p-top*2 + $font-size-btnBase - $p-koef )/2);
  box-sizing: border-box;

  @extend %link_noline;
  @extend %inline-block;
}

@mixin inp_block(){
  box-sizing: border-box;
  width: 100%;
  display: block;
}

// /*======== FORMS BASIC =========*/
input, textarea, button{
  @extend %form_el_base;
  
  &.error{
    border-color: $c-red !important;
  }
}

input:not([type='submit']), textarea, .select{
  color: $c-text;
  background-color: #fff;
  border: 1px solid $c-gray-4;

  &:focus{
    border-color: $c-gray-dark;
  }

  &[disabled], &.disabled{
    background-color: $c-gray-1;
    cursor: default;
  }
}


textarea{
  @include rem('height', 100);
}


// /*=== FORMS BUTTONS ===*/

input[type='submit'], button {
	@extend %form_el_base;

	@include transition(background-color 0.2s ease);
	  // font-weight: bold;
	  font-family: $font-family-second;
	  appearance: none;
	  text-transform: uppercase;
	  text-align: center;
	  cursor: pointer;
	  border: 0;

	  background-color: $c-red;
	  color: #fff;

	  &:hover{
	  	background-color: darken($c-red, 5%);
	  }

	  &[disabled], &.disabled{
	    cursor: default !important;

	    &, &:hover{
	      background-color: $c-gray-4 !important;
	      border-color: $c-gray-6 !important;
	    }
	  }

	  &.inp-block{
	    @include rem('margin-top', $vertical-rythm);
	  }
}

.link-bord, .link-bord-a{
  color: $c-link;
  border: 1px solid $c-link;
  display: inline-block;
  @include rem('padding', 10, 14);
  @extend %link_noline;
  @include font-size(16, 1);
  margin:1px;

  &:hover{
    border-color: $c-green;
  }
}


/*======== ANIMATED BUTTONS =========*/
@keyframes ScaleUp {
  0% {
    transform: scale(0);
  }
  100% {
   transform: scale(1);
  }
}


.link-bord-a{

  padding: 0;

  &, &:hover{ border: 0; color: $c-link; }

  span{
    @include rem('padding', 10, 14);
    display: block;
  }

  &, span {
    position: relative;

    &:before, &:after{
      content:"";
      position: absolute;
      background-color: $c-link;
    }
  }

  &:before, &:after{
    left: 0;
    right: 0;
    height: 1px;
  }

  &:before{
    top: 0;
  }

  &:after{
    bottom: 0;
  }


  span{
    z-index: 1;

    &:before, &:after{
      top: 0;
      bottom: 0;
      width: 1px;
    }

    &:before{
      left: 0;
    }

    &:after{
      right: 0;
    }
  }

  &:hover{
    color: #fff;

    &:after{
      height: 100%;
      transition: height 0.5s ease;
    }
  }
}



@mixin link-bord__animate($type: 'left solid leftside', $delay: 0.2s, $duration: 0.4s, $speed: 0.2s){
    


      &, span {
    
        &:before, &:after{
          transform: scale(0);
          animation-name: ScaleUp;
          animation-duration: $duration;
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
        }
      }

      $delay1: $delay;
      $delay2: $delay + $duration;
      $delay3: $delay + $duration + $speed;
      $delay4: $delay + $duration*1.8 + $speed;




      @if ( $type == 'left solid leftside' ){
        span:before{
          transform-origin: bottom center !important;
          animation-delay: $delay1 !important;
        }

        &:before{
          transform-origin: center left;
          animation-delay: $delay2;
        }

        span:after{
          transform-origin: top center !important;
          animation-delay: $delay3 !important;
        }

        &:after{
          transform-origin: center right;
          animation-delay: $delay4;
        }

      }

      @if ( $type == 'rightdirect solid bottomside' ){
        &:after{
          transform-origin: center center;
          animation-delay: $delay1;
        }

        span:before{
          transform-origin: bottom center !important;
          animation-delay: $delay2 !important;
        }

        &:before{
          transform-origin: center left;
          animation-delay: $delay3;
        }

        span:after{
          transform-origin: top center !important;
          animation-delay: $delay4 !important;
        }

        

      }



      @if ( $type == 'leftdirect solid bottomside' ){
        &:after{
          transform-origin: center center;
          animation-delay: $delay1;
        }

        span:after{
          transform-origin: bottom center !important;
          animation-delay: $delay2 !important;
        }

        &:before{
          transform-origin: center right;
          animation-delay: $delay3;
        }

        span:before{
          transform-origin: top center !important;
          animation-delay: $delay4 !important;
        }

      }

}
/*======== end of ANIMATED BUTTONS =========*/


/*======== FORMS OTHER STYLES =========*/

.inp-block{
  @include inp_block();
}

.inp-mid{
  @include rem('width', 400);
  max-width: 100%;
}